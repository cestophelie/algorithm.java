package algorithms;

public class problem1 {
	private int[] twoSum(int[] nums, int target) {
		// With the given array 'nums', find two indexes that adds up to the target value
        // time complexity : O(N^2)
		// space complexity : O(1)
		int[] answer = new int[2];
        int i = 0;
        int j = 0;
        int sub = 0;
        int len = nums.length;
        for (i = 0; i  < len-1; i++) {
            sub = target - nums[i];
            for (j = i+1; j < len; j++) {
                if (sub == nums[j]) {
                    answer[0] = i;
                    answer[1] = j;
                    break;
                }               
            }
        }       
        return answer;
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] nums = {2, 7, 11, 15};
		int target = 9;
		int[] answer = new int[2];
		problem1 prob1 = new problem1();
		answer = prob1.twoSum(nums, target);
		for (int i = 0; i < answer.length; i++) {
			System.out.print(answer[i]);
			if(i != answer.length-1) {
				System.out.print(", ");
			}
		}

		}

}
